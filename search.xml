<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Windows下命令行常用技巧]]></title>
    <url>%2FTongWenQian%2F2019%2F05%2F31%2FWindows%E4%B8%8B%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[使用z进行快速跳跃 mkdir ~/repos cd ~/repos git clone https://github.com/rupa/z.git touch ~/.bashrc start ~/.bashrc在文件里写： 12. ~/repos/z/z.sh alias j=&apos;z&apos; 重启 Git Bash 你去过的所有目录都会被记录了！使用 j XXX 就可以快速到达之前去过的目录了！ 使用 j 可以查看所有去过的目录注意，~/repos/z/z.sh 不能删除，删除了就不能用了 使用 bash alias 快速输入命令注意echo ‘xxx’ &gt; ~/.bashrc 会覆盖文件的所有内容，请提前备份 ~/.bashrc！！把 &gt; 换成 &gt;&gt; 才是追加内容 代码(方便日后查阅)1234567891011121314151617. ~/GitHub/z/z.shexport PYTHONIOENCODING=UTF-8export LANG=&apos;en_US.UTF-8&apos;export LC_ALL=&apos;en_US.UTF-8&apos;alias j=&apos;z&apos;alias gst=&quot;git status -sb&quot;alias ga=&quot;git add&quot;alias gc=&quot;git commit -v&quot;alias gcc=&quot;git commit . -m update&quot;alias gp=&quot;git push&quot;alias gl=&quot;git pull&quot;alias open=&quot;start&quot;alias ll=&quot;ls -la&quot;alias glog=&quot;git log --graph --pretty=format:&apos;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&apos; --abbrev-commit -- | less&quot; 让Windows支持tree 下载 GnuTree.exe 双击安装，一路下一步（注意安装路径里不要有空格，建议安装在 C:\Software\GnuWin32 将 C:\Software\GnuWin32\bin 添加到 PATH 里，添加方法如下：i. Git Bash 添加方法a. 运行 touch ~/.bashrc; echo &apos;export PATH=&quot;$PATH:/c/Software/GnuWin32/bin/&quot;&apos; &gt;&gt; ~/.bashrc b. 重启 Git Bash ii. 图形界面添加方法（推荐使用上面一种方法）a. 在 Windows 的环境变量 PATH 里添加 C:\Software\GnuWin32\bin b. 如果不知道 Windows 怎么添加环境变量 PATH，百度『Windows 环境变量 PATH』即可 然后你就可以运行 tree 命令了 安装curl 搜索 scoop.sh ，按照官网要求安装(卸载： uninstall scoop) 打开 Windows PowerShell ，粘贴在官网复制的命令行 打开 Git Bash ，输入： which scoop 查看是否已经安装成功 scoop install curl 命令行快捷翻译（fy xxx） npm i -g fanyi echo &quot;alias yd=&#39;fanyi&#39;&quot; &gt;&gt; ~/.bashrc如果提示 commond not found，就需要更新 PATHexport PATH=&quot;xxx:$PATH&quot;其中 xxx 的示例为 /c/Users/lev/AppData/Roaming/npm 命令行常用快捷键Ctrl + R 搜索历史，再次 Ctrl + R 切换（按左右键，退出选择且并未执行；若直接按回车，退出选择且执行命令行） Ctrl + A 行首 Ctrl + E 行尾 Ctrl + B 退后 Ctrl + F 前进 Ctrl + W 删一个单词 Ctrl + K 删掉这一行（首先要 Ctrl + A 来到行首才能删） Ctrl + C 中断 Ctrl + G 退出搜索 Alt + . 使用上一行命令的最后一个参数 快捷复制粘贴Git Bash 选中即为复制 按鼠标中键粘贴/Shift + insert CMD 选中再回车复制 右键粘贴 软件推荐ConEmu你也可以尝试 cmder， cmder 是基于 ConEmu 上面改的。 Fira Mono For Powerline 一键呼起（本人设置F1） 分屏（本人设置上下分屏： Alt + Shift + D ，左右分屏： Alt + D ，退出分屏：点击某一个分屏，按 Ctrl + D) 剪切板管理软件 ClipboardFusionCtrl + Shift + v 历史复制内容查看 截图软件 Snipaste]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Windows命令行技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo与GitHub建立博客]]></title>
    <url>%2FTongWenQian%2F2019%2F05%2F31%2FHexo%E4%B8%8EGitHub%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[主要步骤 进入一个安全的目录，比如 cd ~/Desktop 或者 cd ~/Documents，别在根目录 / 建博客。 在 GitHub 上新建一个空 repo，repo 名称是「你的用户名.github.io」（注意个用户名是你的GitHub用户名，不是你的电脑用户名） npm install -g hexo-cli，安装 Hexo hexo init myBlog cd myBlog npm i hexo new 开博大吉，你会看到一个 md 文件的路径 注意：Windows 的路径中的 \ 需要变成 / 才行 运行 start source/_post/开博大吉.md 来编辑这个 md 文件，内容自己想（Ubuntu 系统用 xdg-open xxxxxxxxxxxxxxxxxxx.md 命令） 举例：如果 Windows 提示的是 INFO created: ~\Desktop\myBlog\source_posts\开博大吉.md那么你的命令就应该是 start “~/Desktop/myBlog/source/_posts/开博大吉.md” 注意引号和斜杠，如果路径里没有空格，就不需要引号。 内容示例-–title: 开博大吉-– # 哈哈我的博客开通啦 start _config.yml，编辑网站配置 把第 6 行的 title 改成你想要的名字 把第 9 行的 author 改成你的大名 把最后一行的 type 改成 type: git 在最后一行后面新增一行，左边与 type 平齐，加上一行 repo: 仓库地址 （请将仓库地址改为「你的用户名.github.io」对应的仓库地址，仓库地址以 git@github.com: 开头。注意repo:后面有一个空格） npm install hexo-deployer-git --save，安装 git 部署插件 hexo deploy 进入「你的用户名.github.io」对应的 repo，打开 GitHub Pages 功能，如果已经打开了，你应该会看到一个预览链接 用浏览器访问「预览链接/index.html」就应该看到了你的博客！（GitHub Pages 存在延迟，如果没看到，过三分钟再刷新看看） 第二篇博客 hexo new 第二篇博客 复制显示的路径，使用 start 路径 来编辑它 hexo generate hexo deploy 去看你的博客，应该能看到第二篇博客了 换主题 https://github.com/hexojs/hexo/wiki/Themes 上面有主题合集 随便找一个主题，进入主题的 GitHub 首页，比如我找的是 https://github.com/theme-next/hexo-theme-next 复制它的 SSH 地址或 HTTPS 地址，假设地址为 git@github.com:iissnan/hexo-theme-next.git cd myBlog git clone https://github.com/theme-next/hexo-theme-next themes/next 将 _config.yml 的第 76 行改为 theme: next，保存 hexo generate hexo deploy 等一分钟，然后刷新你的博客页面，你会看到一个新的外观。如果不喜欢这个主题，就回到第 1 步，重选一个主题。 上传源代码注意「你的用户名.github.io」上保存的只是你的博客，并没有保存「生成博客的程序代码」，你需要再创建一个名为 blog-generator 的空仓库，用来保存 myBlog 里面的「生成博客的程序代码」。 在 GitHub 创建 blog-generator 空仓库 按照截图中的命令执行即可 这样一来，你的博客发布在了「你的用户名.github.io」而你的「生成博客的程序代码」发布在了 blog-generator。所有数据万无一失，你就不会因为误删 myBlog 目录而痛哭了。以后每次 hexo deploy 完之后，博客就会更新；然后你还要要 add / commit /push 一下「生成博客的程序代码」，以防万一。这个 blog-generator 就是用来生成博客的程序，而「你的用户名.github.io」仓库就是你的博客页面。]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
